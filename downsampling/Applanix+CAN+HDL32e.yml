# docker-compose.yml - Composition of micro-services to run OpenDLV software.
# Copyright (C) 2017 Christian Berger
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

# Date: 2017-08-08

version: '2'

services:
    ###########################################################################
    # First, create named pipes.
    make-pipes-109-110:
        container_name: make-pipes-109-110
        image: chrberger/cluon-amd64:latest
        cpuset: "0"
        cap_add:
        - MKNOD
        volumes:
        - .:/io:shared
        command: "/bin/sh -c '[ ! -f /io/stdin-109-110 ] && mknod -m 0666 /io/stdin-109-110 p; [ ! -f /io/109-110-stdout ] && mknod -m 0666 /io/109-110-stdout p'"

    make-pipes-110-111:
        container_name: make-pipes-110-111
        image: chrberger/cluon-amd64:latest
        cpuset: "0"
        depends_on:
        - make-pipes-109-110
        cap_add:
        - MKNOD
        volumes:
        - .:/io:shared
        command: "/bin/sh -c '[ ! -f /io/stdin-111-110 ] && mknod -m 0666 /io/stdin-111-110 p; [ ! -f /io/111-110-stdout ] && mknod -m 0666 /io/111-110-stdout p'"

    # odsupercomponent-109 hosts an odredirector to dump data to STDOUT.
    odsupercomponent-109:
        container_name: odsupercomponent-109
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "2"
        network_mode: "host"
        depends_on:
        - make-pipes-110-111
        volumes:
        - .:/opt/opendlv.data
        command: "/opt/od4/bin/odsupercomponent --cid=109 --verbose=1 --configuration=/opt/opendlv.data/configuration"

    # odsupercomponent-110 hosts an odredirector to pump data from STDIN.
    odsupercomponent-110:
        container_name: odsupercomponent-110
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "2"
        network_mode: "host"
        depends_on:
        - odsupercomponent-109
        volumes:
        - .:/opt/opendlv.data
        command: "/opt/od4/bin/odsupercomponent --cid=110 --verbose=1 --configuration=/opt/opendlv.data/configuration"

    # odsupercomponent-111 hosts an odredirector to dump data to STDOUT.
    odsupercomponent-111:
        container_name: odsupercomponent-111
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "2"
        network_mode: "host"
        depends_on:
        - odsupercomponent-110
        volumes:
        - .:/opt/opendlv.data
        command: "/opt/od4/bin/odsupercomponent --cid=111 --verbose=1 --configuration=/opt/opendlv.data/configuration"

    ###########################################################################
    # odredirector in 110 reads from STDIN (from a named pipe in our case) to restore the Containers in CID 111.
    odredirector-stdin-to-110:
        container_name: odredirector-stdin-to-110
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "6"
        network_mode: "host"
        stdin_open: true
        depends_on:
        - odsupercomponent-111
        volumes:
        - ./stdin-109-110:/io/stdin-109-110
        command: "/bin/sh -c '/opt/od4/bin/odredirector --cid=111 --fromstdin=1 0< /io/stdin-109-110'"

    # odfilter reads from STDIN (from a named pipe in our case) and filters selected containers to STDOUT (another named pipe in our case).
    # 1046@10Hz=opendlv.proxy.GroundSpeedReading
    odfilter-109-110:
        container_name: odfilter-109-110
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "6"
        network_mode: "host"
        stdin_open: true
        depends_on:
        - odredirector-stdin-to-110 # ...then, the odfilter in between, ...
        volumes:
        - ./109-110-stdout:/io/109-110-stdout
        - ./stdin-109-110:/io/stdin-109-110
        command: "/bin/sh -c '/opt/od4/bin/odfilter --downsample=1046:10 0< /io/109-110-stdout 1> /io/stdin-109-110'"

    # odredirector in 109 dumps containers from CID 109 to STDOUT (to a named pipe in our case).
    odredirector-109-to-stdout:
        container_name: odredirector-109-to-stdout
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "6"
        network_mode: "host"
        stdin_open: true
        depends_on:
        - odfilter-109-110           # ...followed by the data source.
        volumes:
        - ./109-110-stdout:/io/109-110-stdout
        command: "/bin/sh -c '/opt/od4/bin/odredirector --cid=109 --id=1 --tostdout=1 1> /io/109-110-stdout'"

    ###########################################################################
    # odredirector in 110 reads from STDIN (from a named pipe in our case) to restore the Containers in CID 111.
    odredirector-stdin-to-110:
        container_name: odredirector-stdin-to-110
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "2"
        network_mode: "host"
        stdin_open: true
        depends_on:
        - odsupercomponent-110
        volumes:
        - ./stdin-111-110:/io/stdin-111-110
        command: "/bin/sh -c '/opt/od4/bin/odredirector --cid=110 --id=1 --fromstdin=1 0< /io/stdin-111-110'"

    # odfilter reads from STDIN (from a named pipe in our case) and filters selected containers to STDOUT (another named pipe in our case).
    # 19@10Hz=opendlv.proxy.GeodeticWgs84Reading
    # 49@10Hz=opendlv.proxy.PointCloudReading
    odfilter-111-110:
        container_name: odfilter-111-110
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "2"
        network_mode: "host"
        stdin_open: true
        depends_on:
        - odredirector-stdin-to-110 # ...then, the odfilter in between, ...
        volumes:
        - ./111-110-stdout:/io/111-110-stdout
        - ./stdin-111-110:/io/stdin-111-110
        command: "/bin/sh -c '/opt/od4/bin/odfilter --downsample=19:10,49:1 0< /io/111-110-stdout 1> /io/stdin-111-110'"

    # odredirector in 111 dumps containers from CID 111 to STDOUT (to a named pipe in our case).
    odredirector-111-to-stdout:
        container_name: odredirector-111-to-stdout
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:latest
        cpuset: "2"
        network_mode: "host"
        stdin_open: true
        depends_on:
        - odsupercomponent-111
        - odfilter-111-110           # ...followed by the data source.
        volumes:
        - ./111-110-stdout:/io/111-110-stdout
        command: "/bin/sh -c '/opt/od4/bin/odredirector --cid=111 --id=1 --tostdout=1 1> /io/111-110-stdout'"

    ###########################################################################
    # opendlv-vehicle-view on 110.
    vehicle-view:
        container_name: opendlv-vehicle-view
        image: chalmersrevere/opendlv-vehicle-view-multi:v0.0.57
        cpuset: "1"
        restart: always
        depends_on:
        - odsupercomponent-109
        network_mode: "host"
        volumes:
        - ~/recordings:/opt/vehicle-view/recordings
        - /var/run/docker.sock:/var/run/docker.sock
        environment:
        - OD4SESSION_CID=110
        - PLAYBACK_OD4SESSION_CID=210
        - OPENDLV_VEHICLE_VIEW_PLATFORM=Snowfox
        ports:
        - "8081:8081"
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -15 node index.js"

    # Applanix Ethernet Realtime port on 111.
    dev-gps-pos-rt:
        container_name: dev-gps-pos-rt
        image: chalmersrevere/opendlv-device-gps-pos-multi:v0.0.11
        cpuset: "3"
        restart: always
        depends_on:
        - odsupercomponent-111
        network_mode: "host"
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -5 /usr/bin/opendlv-device-gps-pos --pos_ip=10.42.42.40 --pos_port=5602 --cid=111 --id=0"

    # Applanix Ethernet Loggin port on 111.
    dev-gps-pos-log:
        container_name: dev-gps-pos-log
        image: chalmersrevere/opendlv-device-gps-pos-multi:v0.0.11
        cpuset: "4"
        restart: always
        depends_on:
        - odsupercomponent-111
        network_mode: "host"
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -4 /usr/bin/opendlv-device-gps-pos --pos_ip=10.42.42.40 --pos_port=5603 --cid=111 --id=0"

    ###########################################################################
    # Velodyne HDL32 Lidar on 111.
    dev-lidar-hdl32e:
        container_name: dev-lidar-hdl32e
        image: chalmersrevere/opendlv-device-lidar-hdl32e-multi:v0.0.14
        cpuset: "5"
        restart: always
        depends_on:
        - odsupercomponent-111
        network_mode: "host"
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -7 /usr/bin/opendlv-device-lidar-hdl32e --hdl32e_ip=10.42.44.22 --hdl32e_port=2368 --cid=111 --gpstime"

